/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package entrystationemployee;


import java.util.Scanner;
import java.util.ArrayList;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author hagar
 */
public class EntryStationEmployee {
    
   
    int choosenSlot ;
    String user; 
    int plateNum;
    
    public EntryStationEmployee(){
        
    }
       
    //function that shows to the user the all free slots that he can choose one from them 
    //function that returns all free slots in an array list which expandes and shrinks easily 
    public void viewFreeSlots(String user, int plateNum) {
        //we will save the free slots that we get from data base in 
        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try
        {
            // get the user-specified connection or get a connection from the ResourceManager
            conn =  DBConnection.getConnection();

            // construct the SQL statement
            String SQL = "select * from slots";

            // prepare statement
            stmt = conn.prepareStatement(SQL);
            rs = stmt.executeQuery();
            while (rs.next())
            {
                System.out.println(rs.getString("name"));

            }

        } catch (SQLException _e)
        {
            System.out.println("SQLException: " + _e.getMessage());
        } catch (Exception _e)
        {
            System.out.println("Exception: " + _e.getMessage());
        } finally
        {
            DBConnection.close(rs);
            DBConnection.close(stmt);
        }
        
        
    
    }
    
    
    //this function will take from the user the choosen slot from the displaied free slots to park there
    public void chooseASlot(int plateNum){
        try {
            Scanner input = new Scanner(System.in);
            choosenSlot = input.nextInt();
        }
        catch(Exception t){
                System.out.println(t.getMessage());
        }
        choosenSlotIsOccupied(plateNum);
    }
    
    //the choosen free slot from the user will set occupied to make the next user does not choose the choosen slot until the first user go away 
    public void choosenSlotIsOccupied(int plateNum){
        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try
        {
            // get the user-specified connection or get a connection from the ResourceManager
            conn = DBConnection.getConnection();

            // construct the SQL statement
            String SQL = "update slots set car_no = " + plateNum + " , slot_status = 1 where slot_id =" + choosenSlot;
            System.out.println(SQL);
            // prepare statement
            stmt = conn.prepareStatement(SQL);
             stmt.executeUpdate();

        } catch (SQLException _e)
        {
            System.out.println("SQLException: " + _e.getMessage());
        } catch (Exception _e)
        {
            System.out.println("Exception: " + _e.getMessage());
        } finally
        {
            DBConnection.close(rs);
            DBConnection.close(stmt);
        }
    }
    
    

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        
        EntryStationEmployee ESE = new EntryStationEmployee();
        Scanner input = new Scanner(System.in);
        
        System.out.println("Enter user name : ");
        String user = input.next();
        
        System.out.println("Enter Plate number : ");
        int plateNum = input.nextInt();
        
        //I think we should make a paramater function that pass the username and plate number and then call the function of view free slots
        ESE.viewFreeSlots(user, plateNum);
        
        ESE.chooseASlot(plateNum);
        
        
        
    }
    
}
